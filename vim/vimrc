set nocompatible
filetype plugin indent on
syntax enable

" Leader key remaps
" =================================
" Remap leader key to be spacebar
let mapleader = " "

" Toggle the nerdtree window with leader + d
nmap <leader>d :NERDTreeToggle<CR>
let NERDTreeShowHidden=1    "Show hidden files by default; toggle with Shift+i

" Easier quitting
nmap <leader>q :q<CR>
nmap <leader>w :w!<CR>

" Toggle the tagbar
nnoremap <silent> <Leader>t :TagbarToggle<CR>

" Quicker Git Status (fugitive)
nmap <leader>g :Git<CR>

" Searching
" =================================

" Dont need /g after :s or :g

" Case-insensitive searching
set ignorecase

" Enable incremental searching
set incsearch

" Highlight matches as you type
set hlsearch

" Color shemes
" =================================
"
" Install color scheme files to vim/colors

" colorscheme base16-default          " requires background=dark to be set
" colorscheme codeschool
" colorscheme default
" colorscheme emacs
" colorscheme github
" colorscheme grb256
" colorscheme PaperColor
" colorscheme pink
" colorscheme railscasts
" colorscheme Tomorrow-Night-Bright
" colorscheme Tomorrow-Night
" colorscheme Tomorrow
" colorscheme topfunky-light
" colorscheme twilight
" colorscheme vividchalk

set background=dark
" set background=light

" highlight current line of text
set cursorline


" Line numbering
" =================================

" Show line numbers
set number
set relativenumber
set numberwidth=5

" Change line numberings for ease with writing commands
" set relativenumber

" Splits
" =================================

" Normalize split behavior
set splitbelow
set splitright

" Move between splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Miscellaneous
" =================================

" Hide unsaved buffers instead of closing them
set hidden

" Turn off line wrapping by default
set nowrap

" Make it obvious where 80 characters is
set colorcolumn=80

" Show 3 lines of context around the cursor
set scrolloff=8

" Set the terminals title
" set title

" No beeping
set visualbell

" Global tab width
set tabstop=2

" And again, related
set shiftwidth=2

" Use spaces instead of tabs
set expandtab

" Show the status line all the time (overridden by vim-airline)
set laststatus=1

" Set region to US
set spelllang=en_us

" Configure ctrlp
" =================================
set wildignore+=*/node_modules/*
let g:ctrlp_custom_ignore = '\v[\/](doc|log)$'

" Airline
" =================================
let g:airline_detect_modified=1
let g:airline_detect_paste=1
let g:airline_detect_crypt=1
" Set airline theme. Options are: powerlineish, 'tomorrow', 'papercolor', 'bubblegum', 'simple' 
let g:airline_theme='base16_gruvbox_dark_hard'
let g:airline_powerline_fonts=1

" Prevent backup behavior
" =================================

" Dont make a backup before before editing a file - disable default behavior
set nobackup
set nowritebackup

" Turn off using swap files
set noswapfile

" Vim Test mappings
" =================================
nmap <silent> t<C-n> :TestNearest<CR>
nmap <silent> t<C-f> :TestFile<CR>
nmap <silent> t<C-s> :TestSuite<CR>
nmap <silent> t<C-l> :TestLast<CR>
nmap <silent> t<C-g> :TestVisit<CR>

" Make test commands execute using dispatch.vim
" let test#strategy = "dispatch"
let test#strategy = "vimterminal"

" Gruvbox 
let g:gruvbox_contrast_light = 'hard'
let g:gruvbox_contrast_dark = 'hard'
autocmd vimenter * ++nested colorscheme gruvbox

" Cheatsheet 
" Vim command used to open new buffer
let g:CheatSheetReaderCmd='new'

" Cheat sheet file type
let g:CheatSheetFt='markdown'

" Program used to retrieve cheat sheet with its arguments
let g:CheatSheetUrlGetter='curl --silent'

" Flag to add cookie file to the query
let g:CheatSheetUrlGetterIdFlag='-b'

" cheat sheet base url
let g:CheatSheetBaseUrl='https://cht.sh'

" cheat sheet settings do not include style settings neiter comments,
" see other options below
let g:CheatSheetUrlSettings='q'

" cheat sheet pager
let g:CheatPager='less -R'

" pygmentize theme used for pager output, see :CheatPager :styles-demo
let g:CheatSheetPagerStyle='rrt'

" Show comments in answers by default
" (setting this to 0 means giving ?Q to the server)
let g:CheatSheetShowCommentsByDefault=1

" Stay in origin buffer (set to 0 to keep focus on the cheat sheet buffer)
let g:CheatSheetStayInOrigBuf=0

" cheat sheet buffer name
let g:CheatSheetBufferName="_cheat"

" Default selection in normal mode (line for whole line, word for word under cursor)
let g:CheatSheetDefaultSelection="line"

" Default query mode
" 0 => buffer
" 1 => replace (do not use or you might loose some lines of code)
" 2 => pager
" 3 => paste after query
" 4 => paste before query
let g:CheatSheetDefaultMode=0

" Path to cheat sheet cookie
let g:CheatSheetIdPath=expand('~/.cht.sh/id')

" Make plugin silent by  setting bellow variable to 1
let g:CheatSheetSilent=0

" Index ctags from any project, including those outside Rails
map <Leader>ct :!ctags -R --exclude=.git --exclude=log --exclude=vendor/assets/bower_components --exclude=node_modules .<CR>

" vim-go syntax highlighting 
let g:go_highlight_structs = 1
let g:go_highlight_methods = 1
let g:go_highlight_functions = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
let g:go_highlight_types = 1
let g:go_highlight_variable_declarations = 1
let g:go_highlight_variable_assignments = 1
let g:go_highlight_function_parameters = 1
let g:go_highlight_extra_types = 1

" Cursor settings based on VIM mode
"   Reference chart of values:
"   Ps = 0  -> blinking block.
"   Ps = 1  -> blinking block (default).
"   Ps = 2  -> steady block.
"   Ps = 3  -> blinking underline.
"   Ps = 4  -> steady underline.
"   Ps = 5  -> blinking bar (xterm).
"   Ps = 6  -> steady bar (xterm).xterm
let &t_SI = "\e[5 q"
let &t_EI = "\e[1 q"
